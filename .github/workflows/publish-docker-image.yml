name: Publish Docker image to registry
run-name: Publish Docker image to ${{ inputs.target_registry || 'release registry' }}

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      target_registry:
        description: 'Registry to publish to'
        required: true
        default: ACR
        type: choice
        options:
        - ACR
        - GH
        - DH
  
env:
  TARGET: DH
  NAMESPACE: ''
  REGISTRY_GH: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  configure_registry:
    name: Configure registry environment
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.output.outputs.target }}
      namespace: ${{ steps.output.outputs.namespace }}

    steps:
      - name: Update for workflow_dispatch
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "TARGET=${{ inputs.target_registry }}" >> $GITHUB_ENV

      - name: Set namespace for target registry
        run: |
          case ${{ env.TARGET }} in \
            ACR) echo "NAMESPACE=${{ secrets.REGISTRY_ACR }}" >> $GITHUB_ENV; echo 'ACR' ;; \
            GH) echo "NAMESPACE=${{ env.REGISTRY_GH }}" >> $GITHUB_ENV; echo 'GH' ;; \
            DH) echo 'DH' ;; \
            esac
      
      - name: Set job outputs
        id: output
        run: |
          echo "target=${{ env.TARGET }}" >> $GITHUB_OUTPUT
          echo "namespace=${{ env.NAMESPACE }}" >> $GITHUB_OUTPUT

  acr:
    needs: [configure_registry]
    if: ${{ needs.configure_registry.outputs.target == 'ACR' }}
    name: ACR build and push
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ needs.configure_registry.outputs.namespace }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to ACR
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ secrets.REGISTRY_ACR }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  gh:
    needs: [configure_registry]
    if: ${{ needs.configure_registry.outputs.target == 'GH' }}
    name: GH build and push
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ needs.configure_registry.outputs.namespace }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Github
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY_GH }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  dh:
    needs: [configure_registry]
    if: ${{ needs.configure_registry.outputs.target == 'DH' }}
    name: DH build and push
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          images: ${{ env.IMAGE_NAME }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          addLatest: true